
    
    team_year <- cbd_torvik_ratings(year = 2024)
    
    team_game_stats <- cbd_torvik_game_stats(year = 2024)
    
    player_game <- cbd_torvik_player_game(year = 2024)
    
    
    team_ids <- load_mbb_player_box(seasons = most_recent_mbb_season())
    
    
    team_ids <- team_ids%>%
      select(team_logo,team_location)
    
    team_ids <- team_ids[!duplicated(team_ids), ]
    
    
    
    #Getting Adjusted O
    
    team_game_stats <- team_game_stats%>%
      mutate(avg_adj_o = mean(adj_o))
    
    team_game <- team_game_stats%>%
      filter(team == "Duke")%>%
      mutate(team_avg_adj_o = mean(adj_o),
             game_number = n() - row_number() + 1)%>%
      arrange(game_number)%>%
      mutate(rolling_adj_o = rollmean(adj_o, k = 5, fill = NA, align = "right"))
    
    
    #Off Shots over Time
    
    team_style <- player_game%>%
      group_by(date,team)%>%
      mutate(total_game_rim_a = sum(rim_a),
             total_game_rim_m = sum(rim_m),
             rim_perc = total_game_rim_m/total_game_rim_a,
             total_game_mid_a = sum(mid_a),
             total_game_mid_m = sum(mid_m),
             mid_perc = total_game_mid_m/total_game_mid_a,
             total_game_three_a = sum(three_a),
             total_game_three_m = sum(three_m),
             three_perc = total_game_three_m/total_game_three_a,
             total_game_fta = sum(fta),
             total_game_ftm = sum(ftm),
             ft_perc = total_game_ftm/total_game_fta,
             total_game_pts= sum(pts),
             total_game_attempts = total_game_rim_a+total_game_mid_a+total_game_three_a)%>%
      pivot_longer(c(total_game_rim_a,total_game_mid_a,total_game_three_a,total_game_fta),
                   names_to = "attempt_location",values_to = "attempt_values")%>%
      pivot_longer(c(total_game_rim_m,total_game_mid_m,total_game_three_m,total_game_ftm),
                   names_to = "made_location",values_to = "made_values")%>%
      pivot_longer(c(rim_perc,mid_perc,three_perc,ft_perc),
                   names_to = "location_shooting_perc",values_to = "shooting_perc")%>%
      mutate(attempt_location_perc = round(attempt_values/total_game_attempts,3))%>%
      mutate(made_location_perc = round(made_values/total_game_pts,3),
             Location = case_when(attempt_location == "total_game_rim_a"~ "Rim",
                                  attempt_location == "total_game_mid_a"~ "Mid Range",
                                  attempt_location == "total_game_three_a"~ "3 Pointer",
                                  attempt_location == "total_game_fta"~ "Free Throw",
                                  location_shooting_perc == "rim_perc"~ "Rim",
                                  location_shooting_perc == "mid_perc"~ "Mid Range",
                                  location_shooting_perc == "three_perc"~ "3 Pointer",
                                  location_shooting_perc == "ft_perc"~ "Free Throw"))%>%
      select(date,team,conf,opp,result,attempt_location,attempt_location_perc,Location,location_shooting_perc,shooting_perc)
    
    
    team_style <- team_style%>%
      mutate(true_location = case_when(Location == "Rim" & location_shooting_perc ==	"rim_perc" ~ "Rim",
                                       Location == "Mid Range" & location_shooting_perc ==	"mid_perc" ~ "Mid Range",
                                       Location == "3 Pointer" & location_shooting_perc ==	"three_perc" ~ "3 Pointer",
                                       Location == "Free Throw" & location_shooting_perc ==	"ft_perc" ~ "Free Throw"))%>%
      filter(!is.na(true_location))%>%
      rename(Result = "result")
    
    
    team_style <- team_style[!duplicated(team_style), ]
    
    
    rim_team <- team_style%>%
      ungroup()%>%
      filter(true_location == "Rim")%>%
      mutate(avg_rim = mean(attempt_location_perc))%>%
      filter(team == "Duke")%>%
      mutate( game_number = row_number())%>%
      arrange(game_number)%>%
      mutate( rolling_rim_perc = rollmean(attempt_location_perc, k = 5, fill = NA, align = "right"),
              team_mean_rim = mean(attempt_location_perc))
              
    
    three_team <- team_style%>%
      ungroup()%>%
      filter(true_location == "3 Pointer")%>%
      mutate(avg_three = mean(attempt_location_perc))%>%
      filter(team == "Duke")%>%
      mutate( game_number = row_number())%>%
      arrange(game_number)%>%
      mutate( rolling_three_perc = rollmean(attempt_location_perc, k = 5, fill = NA, align = "right"),
              team_mean_three = mean(attempt_location_perc))
    
              
    
    rim_team_chart <- ggplot(rim_team, aes(x=game_number,y=rolling_rim_perc))+
      geom_line(aes(),color = "steelblue1",size = 1)+
      scale_y_continuous(labels = percent,limits = c(.15,.6))+
      scale_x_continuous(limits = c(5,37))+
      geom_hline(yintercept = rim_team$team_mean_rim,linetype = "dashed", color = "steelblue1",size = 1.1)+
      geom_hline(yintercept = rim_team$avg_rim,linetype = "dashed", color = "black",size=1.1)+
      #minor_breaks = seq(0, 1, 10), breaks = seq(0, 1, 25))+
      theme_minimal()+
      labs(y = "",
           x= "",
           title = "Rim Att. Rate")+
      theme(plot.title = element_text(size = 20, hjust = 0.5))+
      theme(plot.subtitle = element_text(size = 22,hjust = 0.5))+
      theme(strip.text = element_text(size=20))+
      theme(axis.text.x = element_text(size=14),
            axis.text.y = element_text(size=14))
    
    
    
    three_team_chart <- ggplot(three_team, aes(x=game_number,y=rolling_three_perc))+
      geom_line(aes(),color = "steelblue1",size = 1)+
      scale_y_continuous(labels = percent,limits = c(.15,.6))+
      scale_x_continuous(limits = c(5,37))+
      geom_hline(yintercept = three_team$team_mean_three,linetype = "dashed", color = "steelblue1",size = 1.1)+
      geom_hline(yintercept = three_team$avg_three,linetype = "dashed", color = "black",size=1.1)+
      #minor_breaks = seq(0, 1, 10), breaks = seq(0, 1, 25))+
      theme_minimal()+
      labs(y = "",
           x= "",
           title = "3P Att. Rate")+
      theme(plot.title = element_text(size = 20, hjust = 0.5))+
      theme(plot.subtitle = element_text(size = 22,hjust = 0.5))+
      theme(strip.text = element_text(size=20))+
      theme(axis.text.x = element_text(size=14),
            axis.text.y = element_text(size=14))
    
    
    adj_o_team_chart <- ggplot(team_game, aes(x=game_number,y=rolling_adj_o))+
      geom_line(aes(),color = "steelblue1",size = 1)+
      scale_y_continuous(limits = c(80,140))+
      scale_x_continuous(limits = c(5,37))+
      geom_hline(yintercept = team_game$team_avg_adj_o,linetype = "dashed", color = "steelblue1",size = 1.1)+
      geom_hline(yintercept = team_game$avg_adj_o,linetype = "dashed", color = "black",size=1.1)+
      #minor_breaks = seq(0, 1, 10), breaks = seq(0, 1, 25))+
      theme_minimal()+
      labs(y = "",
           x= "",
           title = "Offensive Efficiency (Adj)")+
      theme(plot.title = element_text(size = 20, hjust = 0.2))+
      theme(plot.subtitle = element_text(size = 22,hjust = 0.5))+
      theme(strip.text = element_text(size=20))+
      theme(axis.text.x = element_text(size=14),
            axis.text.y = element_text(size=14))
    
    
    
    
    
    #Def Shots over Time
    
    
    team_game_stats <- team_game_stats%>%
      mutate(avg_adj_d = mean(adj_d))
    
    team_game2 <- team_game_stats%>%
      filter(team == "Houston")%>%
      mutate(team_avg_adj_d = mean(adj_d),
             game_number = n() - row_number() + 1)%>%
      arrange(game_number)%>%
      mutate(rolling_adj_d = rollmean(adj_d, k = 5, fill = NA, align = "right"))
    
    
    
    team_style2 <- player_game%>%
      group_by(date,opp)%>%
      mutate(total_game_rim_a = sum(rim_a),
             total_game_rim_m = sum(rim_m),
             rim_perc = total_game_rim_m/total_game_rim_a,
             total_game_mid_a = sum(mid_a),
             total_game_mid_m = sum(mid_m),
             mid_perc = total_game_mid_m/total_game_mid_a,
             total_game_three_a = sum(three_a),
             total_game_three_m = sum(three_m),
             three_perc = total_game_three_m/total_game_three_a,
             total_game_fta = sum(fta),
             total_game_ftm = sum(ftm),
             ft_perc = total_game_ftm/total_game_fta,
             total_game_pts= sum(pts),
             total_game_attempts = total_game_rim_a+total_game_mid_a+total_game_three_a)%>%
      pivot_longer(c(total_game_rim_a,total_game_mid_a,total_game_three_a,total_game_fta),
                   names_to = "attempt_location",values_to = "attempt_values")%>%
      pivot_longer(c(total_game_rim_m,total_game_mid_m,total_game_three_m,total_game_ftm),
                   names_to = "made_location",values_to = "made_values")%>%
      pivot_longer(c(rim_perc,mid_perc,three_perc,ft_perc),
                   names_to = "location_shooting_perc",values_to = "shooting_perc")%>%
      mutate(attempt_location_perc = round(attempt_values/total_game_attempts,3))%>%
      mutate(made_location_perc = round(made_values/total_game_pts,3),
             Location = case_when(attempt_location == "total_game_rim_a"~ "Rim",
                                  attempt_location == "total_game_mid_a"~ "Mid Range",
                                  attempt_location == "total_game_three_a"~ "3 Pointer",
                                  attempt_location == "total_game_fta"~ "Free Throw",
                                  location_shooting_perc == "rim_perc"~ "Rim",
                                  location_shooting_perc == "mid_perc"~ "Mid Range",
                                  location_shooting_perc == "three_perc"~ "3 Pointer",
                                  location_shooting_perc == "ft_perc"~ "Free Throw"))%>%
      select(date,team,conf,opp,result,attempt_location,attempt_location_perc,Location,location_shooting_perc,shooting_perc)
    
    
    team_style2 <- team_style2%>%
      mutate(true_location = case_when(Location == "Rim" & location_shooting_perc ==	"rim_perc" ~ "Rim",
                                       Location == "Mid Range" & location_shooting_perc ==	"mid_perc" ~ "Mid Range",
                                       Location == "3 Pointer" & location_shooting_perc ==	"three_perc" ~ "3 Pointer",
                                       Location == "Free Throw" & location_shooting_perc ==	"ft_perc" ~ "Free Throw"))%>%
      filter(!is.na(true_location))%>%
      rename(Result = "result")
    
    
    team_style2 <- team_style2[!duplicated(team_style2), ]
    
    
    rim_team2 <- team_style2%>%
      ungroup()%>%
      filter(true_location == "Rim")%>%
      mutate(avg_rim = mean(attempt_location_perc))%>%
      filter(opp == "Houston")%>%
      mutate( game_number = row_number())%>%
      arrange(game_number)%>%
      mutate( rolling_rim_perc = rollmean(attempt_location_perc, k = 5, fill = NA, align = "right"),
              team_mean_rim = mean(attempt_location_perc))
    
    
    three_team2 <- team_style2%>%
      ungroup()%>%
      filter(true_location == "3 Pointer")%>%
      mutate(avg_three = mean(attempt_location_perc))%>%
      filter(opp == "Houston")%>%
      mutate( game_number = row_number())%>%
      arrange(game_number)%>%
      mutate( rolling_three_perc = rollmean(attempt_location_perc, k = 5, fill = NA, align = "right"),
              team_mean_three = mean(attempt_location_perc))
    
    
    
    rim_team_chart2 <- ggplot(rim_team2, aes(x=game_number,y=rolling_rim_perc))+
      geom_line(aes(),color = "steelblue1",size = 1)+
      scale_y_continuous(labels = percent,limits = c(.15,.6))+
      scale_x_continuous(limits = c(5,37))+
      geom_hline(yintercept = rim_team2$team_mean_rim,linetype = "dashed", color = "steelblue1",size = 1.1)+
      geom_hline(yintercept = rim_team2$avg_rim,linetype = "dashed", color = "black",size=1.1)+
      #minor_breaks = seq(0, 1, 10), breaks = seq(0, 1, 25))+
      theme_minimal()+
      labs(y = "",
           x= "",
           title = "Rim Att. Rate Allowed")+
      theme(plot.title = element_text(size = 20, hjust = 0.9))+
      theme(plot.subtitle = element_text(size = 22,hjust = 0.5))+
      theme(strip.text = element_text(size=20))+
      theme(axis.text.x = element_text(size=14),
            axis.text.y = element_text(size=14))
    
    
    
    three_team_chart2 <- ggplot(three_team2, aes(x=game_number,y=rolling_three_perc))+
      geom_line(aes(),color = "steelblue1",size = 1)+
      scale_y_continuous(labels = percent,limits = c(.15,.6))+
      scale_x_continuous(limits = c(5,37))+
      geom_hline(yintercept = three_team2$team_mean_three,linetype = "dashed", color = "steelblue1",size = 1.1)+
      geom_hline(yintercept = three_team2$avg_three,linetype = "dashed", color = "black",size=1.1)+
      #minor_breaks = seq(0, 1, 10), breaks = seq(0, 1, 25))+
      theme_minimal()+
      labs(y = "",
           x= "",
           title = "3P Att. Rate Allowed")+
      theme(plot.title = element_text(size = 20, hjust = 0.9))+
      theme(plot.subtitle = element_text(size = 22,hjust = 0.5))+
      theme(strip.text = element_text(size=20))+
      theme(axis.text.x = element_text(size=14),
            axis.text.y = element_text(size=14))
    
    
    adj_o_team_chart2 <- ggplot(team_game2, aes(x=game_number,y=rolling_adj_d))+
      geom_line(aes(),color = "steelblue1",size = 1)+
      scale_y_continuous(limits = c(70,140))+
      scale_x_continuous(limits = c(5,37))+
      geom_hline(yintercept = team_game2$team_avg_adj_d,linetype = "dashed", color = "steelblue1",size = 1.1)+
      geom_hline(yintercept = team_game2$avg_adj_d,linetype = "dashed", color = "black",size=1.1)+
      #minor_breaks = seq(0, 1, 10), breaks = seq(0, 1, 25))+
      theme_minimal()+
      labs(y = "",
           x= "",
           title = "Defensive Efficiency (Adj)")+
      theme(plot.title = element_text(size = 20, hjust = 0.9))+
      theme(plot.subtitle = element_text(size = 22,hjust = 0.5))+
      theme(strip.text = element_text(size=20))+
      theme(axis.text.x = element_text(size=14),
            axis.text.y = element_text(size=14))
    
    
    
    
    
    
    
    
    
    
    
    # Title
    
    
    
    vs <- 
      ggplot(data = team_ids)+
      theme_void()+
      ggdraw()+
      annotate("text",x = -.55, y = .8, label = "Offense"
               , color="#012169",hjust = .5,size = 15) +
      annotate("text",x = .05, y = .7, label = "vs."
               , color="black",hjust = .5,size = 10) +
      annotate("text", x = .65, y= .8, hjust = .5, 
               label="Defense", color="#C8102E",size = 15)
      
      
      annotate("text", x = firebird$wt, y=firebird$mpg, hjust = 0, parse=T, 
               label='"Pon" * phantom("tiac Firebird")', color="white") +
      annotate("text", x = firebird$wt, y=firebird$mpg, hjust = 0, parse=T, 
               label='phantom("Pon") * "tiac Firebird"', color="black")
      draw_label("Offense vs. Defense",size = 38,hjust=.7,vjust = .1)
      
      
      
      
      geom_text(aes(x = 1, y = 3, label = "Offense vs. Defense"), size = 10,vjust = .75)+
      theme(axis.text.y = element_blank(),
            legend.position = "none",
            axis.text.x = element_blank(),
            plot.caption = element_text(size = 8),
            panel.background = element_blank())
    
    
    off_team_logo <- team_ids%>%
      filter(team_location == "Duke")
    
    
    off_team_logo <- ggplot(data = off_team_logo)+
      theme_minimal()+
      ggdraw()+
      draw_image(off_team_logo$team_logo,halign = 0,hjust = .1,valign = 0,vjust = .1,scale = 2)
    
    
    def_team_logo <- team_ids%>%
      filter(team_location == "Houston")
    
    
    def_team_logo <- ggplot(data = def_team_logo)+
      theme_minimal()+
      ggdraw()+
      draw_image(def_team_logo$team_logo,halign = 0,hjust = .8, vjust = .1,valign = 0,scale = 2)
    
    
    
    # Shots Table
    
    
    shots_table <- player_game%>%
      group_by(date,team)%>%
      mutate(total_game_rim_a = sum(rim_a),
             total_game_rim_m = sum(rim_m),
             rim_perc = total_game_rim_m/total_game_rim_a,
             total_game_mid_a = sum(mid_a),
             total_game_mid_m = sum(mid_m),
             mid_perc = total_game_mid_m/total_game_mid_a,
             total_game_three_a = sum(three_a),
             total_game_three_m = sum(three_m),
             three_perc = total_game_three_m/total_game_three_a,
             total_game_fta = sum(fta),
             total_game_ftm = sum(ftm),
             ft_perc = total_game_ftm/total_game_fta,
             total_game_pts= sum(pts),
             total_game_attempts = total_game_rim_a+total_game_mid_a+total_game_three_a)%>%
      pivot_longer(c(total_game_rim_a,total_game_mid_a,total_game_three_a,total_game_fta),
                   names_to = "attempt_location",values_to = "attempt_values")%>%
      pivot_longer(c(total_game_rim_m,total_game_mid_m,total_game_three_m,total_game_ftm),
                   names_to = "made_location",values_to = "made_values")%>%
      pivot_longer(c(rim_perc,mid_perc,three_perc,ft_perc),
                   names_to = "location_shooting_perc",values_to = "shooting_perc")%>%
      mutate(attempt_location_perc = round(attempt_values/total_game_attempts,3))%>%
      mutate(made_location_perc = round(made_values/total_game_pts,3),
             Location = case_when(attempt_location == "total_game_rim_a"~ "Rim",
                                  attempt_location == "total_game_mid_a"~ "Mid Range",
                                  attempt_location == "total_game_three_a"~ "3 Pointer",
                                  attempt_location == "total_game_fta"~ "Free Throw",
                                  location_shooting_perc == "rim_perc"~ "Rim",
                                  location_shooting_perc == "mid_perc"~ "Mid Range",
                                  location_shooting_perc == "three_perc"~ "3 Pointer",
                                  location_shooting_perc == "ft_perc"~ "Free Throw"))%>%
      select(team,conf,opp,result,attempt_location,attempt_location_perc,Location,location_shooting_perc,shooting_perc)
    
    
    shots_table <- shots_table%>%
      mutate(true_location = case_when(Location == "Rim" & location_shooting_perc ==	"rim_perc" ~ "Rim",
                                       Location == "Mid Range" & location_shooting_perc ==	"mid_perc" ~ "Mid Range",
                                       Location == "3 Pointer" & location_shooting_perc ==	"three_perc" ~ "3 Pointer",
                                       Location == "Free Throw" & location_shooting_perc ==	"ft_perc" ~ "Free Throw"))%>%
      filter(!is.na(true_location))%>%
      ungroup()%>%
    group_by(team,true_location)%>%
      mutate(loc_percentile = round(rank(attempt_location_perc) / length(attempt_location_perc)*100,0),
             shooting_percentile = round(rank(shooting_perc) / length(shooting_perc)*100,0))
      rename(Result = "result")
    
    
    
    shots_table <- shots_table[!duplicated(shots_table), ]
    
    new_shots_table <- shots_table%>%
      ungroup()%>%
      group_by(true_location)%>%
      mutate(avg_attempt_location = mean(attempt_location_perc),
             avg_shooting_perc = mean(shooting_perc))%>%
    reframe(team,avg_shooting_perc,avg_attempt_location,true_location)
    
    
    new_shots_table <- new_shots_table[!duplicated(new_shots_table), ]
    
    # Def Shots Table
    
    
    shots_table2 <- player_game%>%
      filter(opp == "Houston")%>%
      group_by(date,opp)%>%
      mutate(total_game_rim_a = sum(rim_a),
             total_game_rim_m = sum(rim_m),
             rim_perc = total_game_rim_m/total_game_rim_a,
             total_game_mid_a = sum(mid_a),
             total_game_mid_m = sum(mid_m),
             mid_perc = total_game_mid_m/total_game_mid_a,
             total_game_three_a = sum(three_a),
             total_game_three_m = sum(three_m),
             three_perc = total_game_three_m/total_game_three_a,
             total_game_fta = sum(fta),
             total_game_ftm = sum(ftm),
             ft_perc = total_game_ftm/total_game_fta,
             total_game_pts= sum(pts),
             total_game_attempts = total_game_rim_a+total_game_mid_a+total_game_three_a)%>%
      pivot_longer(c(total_game_rim_a,total_game_mid_a,total_game_three_a,total_game_fta),
                   names_to = "attempt_location",values_to = "attempt_values")%>%
      pivot_longer(c(total_game_rim_m,total_game_mid_m,total_game_three_m,total_game_ftm),
                   names_to = "made_location",values_to = "made_values")%>%
      pivot_longer(c(rim_perc,mid_perc,three_perc,ft_perc),
                   names_to = "location_shooting_perc",values_to = "shooting_perc")%>%
      mutate(attempt_location_perc = round(attempt_values/total_game_attempts,3))%>%
      mutate(made_location_perc = round(made_values/total_game_pts,3),
             Location = case_when(attempt_location == "total_game_rim_a"~ "Rim",
                                  attempt_location == "total_game_mid_a"~ "Mid Range",
                                  attempt_location == "total_game_three_a"~ "3 Pointer",
                                  attempt_location == "total_game_fta"~ "Free Throw",
                                  location_shooting_perc == "rim_perc"~ "Rim",
                                  location_shooting_perc == "mid_perc"~ "Mid Range",
                                  location_shooting_perc == "three_perc"~ "3 Pointer",
                                  location_shooting_perc == "ft_perc"~ "Free Throw"))%>%
      select(team,conf,opp,result,attempt_location,attempt_location_perc,Location,location_shooting_perc,shooting_perc)
    
    
    shots_table2 <- shots_table2%>%
      mutate(true_location = case_when(Location == "Rim" & location_shooting_perc ==	"rim_perc" ~ "Rim",
                                       Location == "Mid Range" & location_shooting_perc ==	"mid_perc" ~ "Mid Range",
                                       Location == "3 Pointer" & location_shooting_perc ==	"three_perc" ~ "3 Pointer",
                                       Location == "Free Throw" & location_shooting_perc ==	"ft_perc" ~ "Free Throw"))%>%
      filter(!is.na(true_location))%>%
      rename(Result = "result")
    
    
    
    shots_table2 <- shots_table2[!duplicated(shots_table2), ]
    
    
    
    new_shots_table2 <- shots_table2%>%
      ungroup()%>%
      group_by(true_location)%>%
      mutate(avg_attempt_location = mean(attempt_location_perc),
             avg_shooting_perc = mean(shooting_perc))%>%
      reframe(opp,avg_shooting_perc,avg_attempt_location,true_location)
    
    
    new_shots_table2 <- new_shots_table2[!duplicated(new_shots_table2), ]
    
    
    final_shots_table <- new_shots_table%>%
      left_join(new_shots_table2, by = "true_location")%>%
      reframe(team,avg_shooting_perc.x,avg_attempt_location.x,true_location,
              opp,avg_attempt_location.y,avg_shooting_perc.y)%>%
      filter(true_location != "Free Throw")
    
    
    final_shots <- 
      
      gt(final_shots_table)%>%
      gt_theme_538()%>%
      cols_hide(c(team,opp)) %>% 
      cols_label( avg_shooting_perc.x = "FG%",
                  avg_attempt_location.x = "Frequency",
                  true_location = md("**Team Shot Selection**"),
                  avg_attempt_location.y = "Frequency",
                  avg_shooting_perc.y = "FG%")%>%
      # data_color(columns = per_game_percentile_values,
      #            target_columns = values,
      #            palette = c("red", "indianred1","white", "steelblue1","blue"),
      #            domain = c(0,1))%>%
      # data_color(columns = per_game_percentile_values.1,
      #            target_columns = values.1,
      #            palette = c("red", "indianred1","white", "steelblue1","blue"),
      #            domain = c(0,1))%>%
      # data_color(columns = per_40_percentile_values,
      #            target_columns = per_40,
      #            palette = c("red", "indianred1","white", "steelblue1","blue"),
      #            domain = c(0,1))%>%
      fmt_percent(columns = c(avg_shooting_perc.x,avg_attempt_location.x,
                              avg_attempt_location.y,avg_shooting_perc.y),decimals = 1)%>%
      #fmt_number(columns = c(values,values.1,per_40),decimals = 1)%>%
      gt_add_divider(c(avg_attempt_location.x,true_location), color = 'black', include_labels = TRUE) %>%
      gt::cols_align(
        align = "center",
        columns = c(avg_shooting_perc.x,avg_attempt_location.x,true_location,
                    avg_attempt_location.y,avg_shooting_perc.y))%>%
      tab_style(
        list(cell_fill(color = '#012169'),cell_text(weight = "bold",color = "white")),
        cells_column_labels("avg_shooting_perc.x"))%>%
      tab_style(
        list(cell_fill(color = '#012169'),cell_text(weight = "bold",color = "white")),
        cells_column_labels("avg_attempt_location.x"))%>%
      tab_style(
        list(cell_fill(color = '#C8102E'),cell_text(weight = "bold",color = "white")),
        cells_column_labels("avg_shooting_perc.y"))%>%
      tab_style(
        list(cell_fill(color = '#C8102E'),cell_text(weight = "bold",color = "white")),
        cells_column_labels("avg_attempt_location.y"))
    
    
    
    tmp<- tempfile(fileext = ".png")
    gtsave(final_shots,tmp)
    shots_png <- png::readPNG(tmp,native = TRUE)
    
    
    
    # Off Shots Splits
    
    
    off_player_split <- cbd_torvik_player_split(year = 2024, split = "result", team = "Duke")
    
    
    def_player_split <- cbd_torvik_player_split(year = 2024, split = "result", team = "Houston")
    
    
    
    
    win_loss_rate <- shots_table%>%
      group_by(Result,true_location)%>%
      mutate(avg_attempt_percentage = mean(attempt_location_perc),
             avg_shooting_perc = mean(shooting_perc))%>%
      select(team,Result,true_location,avg_attempt_percentage,avg_shooting_perc)%>%
      ungroup()
    
    
    
    
    win_loss_rate <- win_loss_rate[!duplicated(win_loss_rate), ]
    
    
    win_loss_rate_diff <-  win_loss_rate%>%
      group_by(team,true_location)%>%
      mutate(diff = sum(case_when(
        Result == "W" ~ avg_attempt_percentage,
        Result == "L" ~ -avg_attempt_percentage,
        TRUE ~ 0)),
        diff2 = sum(case_when(
          Result == "W" ~ avg_shooting_perc,
          Result == "L" ~ -avg_shooting_perc,
          TRUE ~ 0)),
        loss = avg_attempt_percentage-diff)%>%
      reframe(team,diff,diff2)
    
    
    win_loss_rate_diff <- win_loss_rate_diff[!duplicated(win_loss_rate_diff), ]
    #win_loss_rate_diff <- options(scipen=999)
    
    
    
    
    
    
    
    
    #Def Shots Split
    
    
    
    
    win_loss_rate2 <- shots_table2%>%
      group_by(Result,true_location)%>%
      mutate(avg_attempt_percentage = mean(attempt_location_perc),
             avg_shooting_perc = mean(shooting_perc))%>%
      select(opp,Result,true_location,avg_attempt_percentage,avg_shooting_perc)%>%
      ungroup()
    
    
    
    
    win_loss_rate2 <- win_loss_rate2[!duplicated(win_loss_rate2), ]
    
    
    win_loss_rate_diff2 <-  win_loss_rate2%>%
      group_by(opp,true_location)%>%
      mutate(diff = sum(case_when(
        Result == "W" ~ -avg_attempt_percentage,
        Result == "L" ~ avg_attempt_percentage,
        TRUE ~ 0)),
        diff2 = sum(case_when(
          Result == "W" ~ -avg_shooting_perc,
          Result == "L" ~ avg_shooting_perc,
          TRUE ~ 0)),
        loss = avg_attempt_percentage-diff)%>%
      #reframe(opp,avg_attempt_percentage,loss,diff)
      reframe(opp,diff,diff2)
    
    
    win_loss_rate_diff2 <- win_loss_rate_diff2[!duplicated(win_loss_rate_diff2), ]
    
    
    final_win_loss_rate = win_loss_rate_diff%>%
      left_join(win_loss_rate_diff2, by = "true_location")%>%
      filter(true_location != "Free Throw")%>%
      reframe(diff2.x,diff.x,true_location,diff.y,diff2.y)
    
    
    
    final_win_loss <- 
      
      gt(final_win_loss_rate)%>%
      gt_theme_538()%>%
      #cols_hide(c(team,opp)) %>% 
      cols_label( diff2.x = "FG% Diff.",
                  diff.x = "Freq. Diff.",
                  true_location = md("**Diff. Wins vs. Losses**"),
                  diff.y = "Freq. Diff.",
                  diff2.y = "FG% Diff.")%>%
      # data_color(columns = per_game_percentile_values,
      #            target_columns = values,
      #            palette = c("red", "indianred1","white", "steelblue1","blue"),
      #            domain = c(0,1))%>%
      # data_color(columns = per_game_percentile_values.1,
      #            target_columns = values.1,
      #            palette = c("red", "indianred1","white", "steelblue1","blue"),
      #            domain = c(0,1))%>%
      # data_color(columns = per_40_percentile_values,
      #            target_columns = per_40,
      #            palette = c("red", "indianred1","white", "steelblue1","blue"),
    #            domain = c(0,1))%>%
    fmt_percent(columns = c(diff.x,diff2.x,
                            diff.y,diff2.y),decimals = 1)%>%
      #fmt_number(columns = c(values,values.1,per_40),decimals = 1)%>%
      gt_add_divider(c(diff.x,true_location), color = 'black', include_labels = TRUE) %>%
      gt::cols_align(
        align = "center",
        columns = c(diff.x,diff2.x,
                    diff.y,diff2.y,true_location))%>%
      tab_style(
        list(cell_fill(color = '#012169'),cell_text(weight = "bold",color = "white")),
        cells_column_labels("diff.x"))%>%
      tab_style(
        list(cell_fill(color = '#012169'),cell_text(weight = "bold",color = "white")),
        cells_column_labels("diff2.x"))%>%
      tab_style(
        list(cell_fill(color = '#C8102E'),cell_text(weight = "bold",color = "white")),
        cells_column_labels("diff.y"))%>%
      tab_style(
        list(cell_fill(color = '#C8102E'),cell_text(weight = "bold",color = "white")),
        cells_column_labels("diff2.y"))
      
    
    
      
      
    tmp<- tempfile(fileext = ".png")
    gtsave(final_win_loss,tmp)
    win_loss_png <- png::readPNG(tmp,native = TRUE)
    
    
    # By Shot Clock
    
    
    
    shot_clock <- tibble(
      three_A_perc = c("80","42","46","30"),
      three_A = c(".429",".365",".357",".361"),
      three_perc = c("90","82","76","50"),
      three_pct = c(".52",".394",".307",".136"),
      two_perc = c("71","81","86","95"),
      two_pct = c(".71",".563",".457",".333"),
      PPP_perc = c("98","93","96","98"),
      PPP = c("1.31","1.16","1.11","1.15"),
      freq_perc = c("42","92","26","29"),
      freq = c(".27",".464",".217",".049"),
   
      clock = c("0-10 Secs", "11-20 Secs","21-30 Secs","31+ Secs"),
      
      freq2 = c(".253",".427",".256",".064"),
      freq2_perc = c("90","41","21","26"),
      PPP2 = c("1.08",".88",".81",".59"),
      PPP2_perc = c("92","100","100","99"),
      two2_pct = c(".63",".457",".362",".205"),
      two2_perc = c("93","96","94","93"),
      three2_pct = c(".432",".338",".242",".105"),
      three2_perc = c("90","82","76","50"),
      three2_A = c(".385",".427",".38",".424"),
      three2_A_perc = c("38","15","37","26"))
    
    # shot_clock <- as.numeric(c("freq","two_pct","three_pct","three_A",
    #              "freq2","two2_pct","three2_pct","three2_A"))
    
    shot_clock <- shot_clock%>%
      mutate_at(c("freq","two_pct","three_pct","three_A",
                "freq2","two2_pct","three2_pct","three2_A",
                "freq2_perc","PPP2_perc","two2_perc","three2_perc","three2_A_perc",
                "freq_perc","PPP_perc","two_perc","three_perc","three_A_perc"), as.numeric)
    
    
    
    shot_clock_table <- 
      
      gt(shot_clock)%>%
      gt_theme_538()%>%
      cols_hide(c(freq2_perc,PPP2_perc,two2_perc,three2_perc,three2_A_perc,
                  freq_perc,PPP_perc,two_perc,three_perc,three_A_perc,
                  two_pct,three_pct,two2_pct,three2_pct)) %>% 
      cols_label(
        clock = md("**Shot Clock Scoring**"),
        freq2 = "Freq.",
        PPP2 = "PPP",
        two2_pct = "2P%",
        three2_pct = "3P%",
        three2_A = "3 Att Rate",
        freq = "Freq.",
        PPP = "PPP",
        two_pct = "2P%",
        three_pct = "3P%",
        three_A = "3 Att Rate")%>%
      # data_color(columns = per_game_percentile_values,
      #            target_columns = values,
      #            palette = c("red", "indianred1","white", "steelblue1","blue"),
      #            domain = c(0,1))%>%
      # data_color(columns = per_game_percentile_values.1,
      #            target_columns = values.1,
      #            palette = c("red", "indianred1","white", "steelblue1","blue"),
      #            domain = c(0,1))%>%
      # data_color(columns = per_40_percentile_values,
      #            target_columns = per_40,
      #            palette = c("red", "indianred1","white", "steelblue1","blue"),
    #            domain = c(0,1))%>%
    fmt_percent(columns = c(freq,three_A,
                            freq2,three2_A),decimals = 1)%>%
      #fmt_number(columns = c(values,values.1,per_40),decimals = 1)%>%
      gt_add_divider(c(freq,clock), color = 'black', include_labels = TRUE) %>%
      gt::cols_align(
        align = "center",
        columns = c(everything()))%>%
      tab_style(
        list(cell_fill(color = '#012169'),cell_text(weight = "bold",color = "white")),
        cells_column_labels("freq"))%>%
      tab_style(
        list(cell_fill(color = '#012169'),cell_text(weight = "bold",color = "white")),
        cells_column_labels("PPP"))%>%
      tab_style(
        list(cell_fill(color = '#C8102E'),cell_text(weight = "bold",color = "white")),
        cells_column_labels("freq2"))%>%
      tab_style(
        list(cell_fill(color = '#C8102E'),cell_text(weight = "bold",color = "white")),
        cells_column_labels("PPP2"))%>%
      tab_style(
        list(cell_fill(color = '#012169'),cell_text(weight = "bold",color = "white")),
        cells_column_labels("three_A"))%>%
      tab_style(
        list(cell_fill(color = '#C8102E'),cell_text(weight = "bold",color = "white")),
        cells_column_labels("three2_A"))
      
    
    
    
    tmp<- tempfile(fileext = ".png")
    gtsave(shot_clock_table,tmp)
    shot_clock_table <- png::readPNG(tmp,native = TRUE)
    
    
    # By Position
    
    player_position_box <- load_mbb_player_box(seasons = most_recent_mbb_season())
    
    
    pos_perc <- player_position_box%>%
      filter(!is.na(minutes))%>%
      group_by(team_id)%>%
      mutate(total_points_allowed = sum(points))%>%
      ungroup()%>%
      group_by(team_id, athlete_position_name)%>%
      mutate(total_points_pos_group = sum(points),
             pos_group_perc_points_allowed = total_points_pos_group/total_points_allowed,
             efg = (sum(field_goals_made) + .5 * (sum(three_point_field_goals_made)))/sum(field_goals_attempted))%>%
      ungroup()%>%
      group_by(athlete_position_name)%>%
      mutate(percentile = round(rank(pos_group_perc_points_allowed) / length(pos_group_perc_points_allowed)*100,0),
             efg_percentile = round(rank(efg) / length(efg)*100,0))%>%
      reframe(team_location,total_points_allowed,athlete_position_abbreviation,total_points_pos_group,
             pos_group_perc_points_allowed,percentile,efg,efg_percentile)%>%
      ungroup()
    
    
    pos_perc <- pos_perc[!duplicated(pos_perc), ]
    
    pos_team_perc <- pos_perc%>%
      filter(team_location == "Duke")%>%
      reframe(team_location,efg, pos_group_perc_points_allowed,athlete_position_name,percentile,efg_percentile)
    
    
    
    opp_pos_perc <- player_position_box%>%
      filter(!is.na(minutes),athlete_position_abbreviation != "ATH")%>%
      group_by(opponent_team_id)%>%
      mutate(total_points_allowed = sum(points))%>%
      ungroup()%>%
      group_by(opponent_team_id, athlete_position_name)%>%
      mutate(total_points_pos_group = sum(points),
             pos_group_perc_points_allowed = round(total_points_pos_group/total_points_allowed,3),
             efg = (sum(field_goals_made) + .5 * (sum(three_point_field_goals_made)))/sum(field_goals_attempted))%>%
      ungroup()%>%
      group_by(athlete_position_name)%>%
      mutate(percentile = round(rank(pos_group_perc_points_allowed) / length(pos_group_perc_points_allowed)*100,0),
             efg_percentile = round(rank(efg) / length(efg)*100,0))%>%
      select(opponent_team_location,total_points_allowed,athlete_position_abbreviation,total_points_pos_group,
             pos_group_perc_points_allowed,percentile,efg,efg_percentile)%>%
      ungroup()
    
    
    
    opp_pos_perc <- opp_pos_perc[!duplicated(opp_pos_perc), ]
    
    opp_pos_team_perc <- opp_pos_perc%>%
      filter(opponent_team_location == "Houston")%>%
      rename(Position = athlete_position_abbreviation)%>%
        reframe(opponent_team_location,pos_group_perc_points_allowed,efg,athlete_position_name,percentile,efg_percentile)
    
    final_pos <- pos_team_perc%>%
      left_join(opp_pos_team_perc, by = "athlete_position_name")
    
    
    
    
   pos_table <- 
      
      gt(final_pos)%>%
      gt_theme_538()%>%
      cols_hide(c(team_location,opponent_team_location,percentile.x,percentile.y,
                  efg_percentile.x,efg_percentile.y)) %>% 
      cols_label(
        athlete_position_name = md("**Positional Scoring**"),
        efg.x = "eFG%",
        pos_group_perc_points_allowed.x = "% of Points",
        efg.y = "eFG%",
        pos_group_perc_points_allowed.y = "% of Points",)%>%
      # data_color(columns = per_game_percentile_values,
      #            target_columns = values,
      #            palette = c("red", "indianred1","white", "steelblue1","blue"),
      #            domain = c(0,1))%>%
      # data_color(columns = per_game_percentile_values.1,
      #            target_columns = values.1,
      #            palette = c("red", "indianred1","white", "steelblue1","blue"),
      #            domain = c(0,1))%>%
      # data_color(columns = per_40_percentile_values,
      #            target_columns = per_40,
      #            palette = c("red", "indianred1","white", "steelblue1","blue"),
    #            domain = c(0,1))%>%
    fmt_percent(columns = c(efg.x, pos_group_perc_points_allowed.x,
                            efg.y, pos_group_perc_points_allowed.y),decimals = 1)%>%
      #fmt_number(columns = c(values,values.1,per_40),decimals = 1)%>%
      gt_add_divider(c(pos_group_perc_points_allowed.x,athlete_position_name), color = 'black', include_labels = TRUE) %>%
      gt::cols_align(
        align = "center",
        columns = c(everything()))%>%
     tab_style(
       list(cell_fill(color = '#012169'),cell_text(color = "white")),
       cells_column_labels("efg.x"))%>%
     tab_style(
       list(cell_fill(color = '#012169'),cell_text(color = "white")),
       cells_column_labels("pos_group_perc_points_allowed.x"))%>%
     tab_style(
       list(cell_fill(color = '#C8102E'),cell_text(color = "white")),
       cells_column_labels("efg.y"))%>%
     tab_style(
       list(cell_fill(color = '#C8102E'),cell_text(color = "white")),
       cells_column_labels("pos_group_perc_points_allowed.y"))
   
   
    
    tmp<- tempfile(fileext = ".png")
    gtsave(pos_table,tmp)
    pos_table <- png::readPNG(tmp,native = TRUE)
    
    
    
    
    
    title <- (off_team_logo | vs | def_team_logo)+ plot_layout(widths = c(1,2,1))
    
    middle <- (title / shots_png / win_loss_png / pos_table / shot_clock_table) +plot_layout(heights = c(1,3,3,3,3))
    
    
   off_rolling <-  adj_o_team_chart /rim_team_chart / three_team_chart  
   def_rolling <-  adj_o_team_chart2 /rim_team_chart2 / three_team_chart2
    
    
   (off_rolling | middle | def_rolling) + plot_layout(ncol = 3,widths = c(1,5,1))
   
   
   
